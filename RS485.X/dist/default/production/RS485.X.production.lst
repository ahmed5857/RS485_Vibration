

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Aug 07 10:39:40 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F882
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 1.41
    21                           ; Generated 25/01/2017 GMT
    22                           ; 
    23                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F882 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  0000                     	;# 
   283  0001                     	;# 
   284  0002                     	;# 
   285  0003                     	;# 
   286  0004                     	;# 
   287  0005                     	;# 
   288  0006                     	;# 
   289  0007                     	;# 
   290  0009                     	;# 
   291  000A                     	;# 
   292  000B                     	;# 
   293  000C                     	;# 
   294  000D                     	;# 
   295  000E                     	;# 
   296  000E                     	;# 
   297  000F                     	;# 
   298  0010                     	;# 
   299  0011                     	;# 
   300  0012                     	;# 
   301  0013                     	;# 
   302  0014                     	;# 
   303  0015                     	;# 
   304  0015                     	;# 
   305  0016                     	;# 
   306  0017                     	;# 
   307  0018                     	;# 
   308  0019                     	;# 
   309  001A                     	;# 
   310  001B                     	;# 
   311  001B                     	;# 
   312  001C                     	;# 
   313  001D                     	;# 
   314  001E                     	;# 
   315  001F                     	;# 
   316  0081                     	;# 
   317  0085                     	;# 
   318  0086                     	;# 
   319  0087                     	;# 
   320  0089                     	;# 
   321  008C                     	;# 
   322  008D                     	;# 
   323  008E                     	;# 
   324  008F                     	;# 
   325  0090                     	;# 
   326  0091                     	;# 
   327  0092                     	;# 
   328  0093                     	;# 
   329  0093                     	;# 
   330  0093                     	;# 
   331  0094                     	;# 
   332  0095                     	;# 
   333  0096                     	;# 
   334  0097                     	;# 
   335  0098                     	;# 
   336  0099                     	;# 
   337  009A                     	;# 
   338  009B                     	;# 
   339  009C                     	;# 
   340  009D                     	;# 
   341  009E                     	;# 
   342  009F                     	;# 
   343  0105                     	;# 
   344  0107                     	;# 
   345  0108                     	;# 
   346  0109                     	;# 
   347  010C                     	;# 
   348  010C                     	;# 
   349  010D                     	;# 
   350  010E                     	;# 
   351  010F                     	;# 
   352  0185                     	;# 
   353  0187                     	;# 
   354  0188                     	;# 
   355  0189                     	;# 
   356  018C                     	;# 
   357  018D                     	;# 
   358                           
   359                           	psect	nvCOMMON
   360  007A                     __pnvCOMMON:	
   361  007A                     _ECU_ID:	
   362  007A                     	ds	1
   363  0013                     _SSPBUF	set	19
   364  0014                     _SSPCON	set	20
   365  0019                     _TXREG	set	25
   366  000C                     _PIR1bits	set	12
   367  001A                     _RCREG	set	26
   368  001F                     _ADCON0	set	31
   369  0063                     _SSPIF	set	99
   370  0038                     _RC0	set	56
   371  0065                     _RCIF	set	101
   372  00C4                     _CREN	set	196
   373  005F                     _GIE	set	95
   374  005E                     _PEIE	set	94
   375  00C7                     _SPEN	set	199
   376  0091                     _SSPCON2bits	set	145
   377  0093                     _SSPADD	set	147
   378  0091                     _SSPCON2	set	145
   379  0094                     _SSPSTAT	set	148
   380  0099                     _SPBRG	set	153
   381  0085                     _TRISA	set	133
   382  048E                     _ACKSTAT	set	1166
   383  043C                     _TRISC4	set	1084
   384  043B                     _TRISC3	set	1083
   385  0465                     _RCIE	set	1125
   386  04C5                     _TXEN	set	1221
   387  043F                     _TRISC7	set	1087
   388  043E                     _TRISC6	set	1086
   389  04C4                     _SYNC	set	1220
   390  04C2                     _BRGH	set	1218
   391  0438                     _TRISC0	set	1080
   392  0188                     _ANSEL	set	392
   393                           
   394                           ; #config settings
   395  0000                     
   396                           	psect	cinit
   397  0011                     start_initialization:	
   398  0011                     __initialization:	
   399                           
   400                           ; Clear objects allocated to COMMON
   401  0011  01FB               	clrf	__pbssCOMMON& (0+127)
   402                           
   403                           ; Clear objects allocated to BANK0
   404  0012  01A0               	clrf	__pbssBANK0& (0+127)
   405  0013  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   406  0014  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   407  0015  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   408  0016  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   409  0017  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   410  0018                     end_of_initialization:	
   411                           ;End of C runtime variable initialization code
   412                           
   413  0018                     __end_of__initialization:	
   414  0018  0183               	clrf	3
   415  0019  2845               	ljmp	_main	;jump to C main() function
   416                           
   417                           	psect	bssCOMMON
   418  007B                     __pbssCOMMON:	
   419  007B                     _RECEIVED_ECU_ID:	
   420  007B                     	ds	1
   421                           
   422                           	psect	bssBANK0
   423  0020                     __pbssBANK0:	
   424  0020                     _Data_Buffer:	
   425  0020                     	ds	6
   426                           
   427                           	psect	cstackCOMMON
   428  0070                     __pcstackCOMMON:	
   429  0070                     ?_system_init:	
   430  0070                     ?_UART_vidInit:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_UART_u8GetNodeID:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_RS845_ManageState:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_UART_vidSend:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_main:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_UART_vidNewDataReceived:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     UART_vidSend@Length:	
   449                           ; 1 bytes @ 0x0
   450                           
   451                           
   452                           ; 2 bytes @ 0x0
   453  0070                     	ds	2
   454  0072                     ??_UART_vidSend:	
   455                           
   456                           ; 1 bytes @ 0x2
   457  0072                     	ds	1
   458  0073                     UART_vidSend@data:	
   459                           
   460                           ; 1 bytes @ 0x3
   461  0073                     	ds	1
   462  0074                     UART_vidSend@UART_u16Index:	
   463                           
   464                           ; 2 bytes @ 0x4
   465  0074                     	ds	2
   466  0076                     ??_RS845_ManageState:	
   467  0076                     ??_UART_vidNewDataReceived:	
   468                           ; 1 bytes @ 0x6
   469                           
   470                           
   471                           ; 1 bytes @ 0x6
   472  0076                     	ds	4
   473                           
   474                           	psect	cstackBANK0
   475  0026                     __pcstackBANK0:	
   476  0026                     ??_system_init:	
   477  0026                     ??_UART_vidInit:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0026                     ??_UART_u8GetNodeID:	
   481                           ; 1 bytes @ 0x0
   482                           
   483                           
   484                           ; 1 bytes @ 0x0
   485  0026                     	ds	1
   486  0027                     ??_main:	
   487                           
   488                           ; 1 bytes @ 0x1
   489  0027                     	ds	1
   490                           
   491                           	psect	maintext
   492  0045                     __pmaintext:	
   493 ;;
   494 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   495 ;;
   496 ;; *************** function _main *****************
   497 ;; Defined at:
   498 ;;		line 13 in file "main.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, status,2, status,0, pclath, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : B00/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1
   512 ;;      Params:         0       0       0
   513 ;;      Locals:         0       0       0
   514 ;;      Temps:          0       1       0
   515 ;;      Totals:         0       1       0
   516 ;;Total ram usage:        1 bytes
   517 ;; Hardware stack levels required when called:    5
   518 ;; This function calls:
   519 ;;		_UART_vidInit
   520 ;;		_system_init
   521 ;; This function is called by:
   522 ;;		Startup code after reset
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           
   527                           ;psect for function _main
   528  0045                     _main:	
   529                           
   530                           ;main.c: 15: system_init();
   531                           
   532                           ;incstack = 0
   533                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   534  0045  20A0               	fcall	_system_init
   535                           
   536                           ;main.c: 16: UART_vidInit();
   537  0046  2063               	fcall	_UART_vidInit
   538  0047                     l819:	
   539                           ;main.c: 18: while(1)
   540                           
   541                           
   542                           ;main.c: 19: {
   543                           ;main.c: 20: (Data_Buffer.X = 0x55);
   544  0047  3055               	movlw	85
   545  0048  1283               	bcf	3,5	;RP0=0, select bank0
   546  0049  1303               	bcf	3,6	;RP1=0, select bank0
   547  004A  00A7               	movwf	??_main
   548  004B  0827               	movf	??_main,w
   549  004C  00A3               	movwf	_Data_Buffer+3
   550                           
   551                           ;main.c: 21: (Data_Buffer.Y = 0xAA);
   552  004D  30AA               	movlw	170
   553  004E  00A7               	movwf	??_main
   554  004F  0827               	movf	??_main,w
   555  0050  00A4               	movwf	_Data_Buffer+4
   556                           
   557                           ;main.c: 22: (Data_Buffer.Z = 0x88);
   558  0051  3088               	movlw	136
   559  0052  00A7               	movwf	??_main
   560  0053  0827               	movf	??_main,w
   561  0054  00A5               	movwf	_Data_Buffer+5
   562                           
   563                           ;main.c: 23: (Data_Buffer.T = 0x66);
   564  0055  3066               	movlw	102
   565  0056  00A7               	movwf	??_main
   566  0057  0827               	movf	??_main,w
   567  0058  00A2               	movwf	_Data_Buffer+2
   568                           
   569                           ;main.c: 24: (Data_Buffer.SwitchStatus = 1);
   570  0059  17A0               	bsf	_Data_Buffer,7
   571                           
   572                           ;main.c: 25: (Data_Buffer.ID = 0x35);
   573  005A  0820               	movf	_Data_Buffer,w
   574  005B  3980               	andlw	-128
   575  005C  3835               	iorlw	53
   576  005D  00A0               	movwf	_Data_Buffer
   577                           
   578                           ;main.c: 26: (Data_Buffer.AVG_Vibration = 0x30);
   579  005E  3030               	movlw	48
   580  005F  00A7               	movwf	??_main
   581  0060  0827               	movf	??_main,w
   582  0061  00A1               	movwf	_Data_Buffer+1
   583  0062  2847               	goto	l819
   584  0063                     __end_of_main:	
   585                           
   586                           	psect	text1
   587  00A0                     __ptext1:	
   588 ;; *************** function _system_init *****************
   589 ;; Defined at:
   590 ;;		line 30 in file "main.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;		None
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg, status,2
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0   BANK1
   604 ;;      Params:         0       0       0
   605 ;;      Locals:         0       0       0
   606 ;;      Temps:          0       0       0
   607 ;;      Totals:         0       0       0
   608 ;;Total ram usage:        0 bytes
   609 ;; Hardware stack levels used:    1
   610 ;; Hardware stack levels required when called:    3
   611 ;; This function calls:
   612 ;;		Nothing
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           
   619                           ;psect for function _system_init
   620  00A0                     _system_init:	
   621                           
   622                           ;main.c: 32: TRISC0 = 0;
   623                           
   624                           ;incstack = 0
   625                           ; Regs used in _system_init: [wreg+status,2]
   626  00A0  1683               	bsf	3,5	;RP0=1, select bank1
   627  00A1  1303               	bcf	3,6	;RP1=0, select bank1
   628  00A2  1007               	bcf	7,0	;volatile
   629                           
   630                           ;main.c: 33: TRISA = 0xFF;
   631  00A3  30FF               	movlw	255
   632  00A4  0085               	movwf	5	;volatile
   633                           
   634                           ;main.c: 34: ADCON0 = 0x00;
   635  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   636  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   637  00A7  019F               	clrf	31	;volatile
   638                           
   639                           ;main.c: 35: ANSEL = 0x00;
   640  00A8  1683               	bsf	3,5	;RP0=1, select bank3
   641  00A9  1703               	bsf	3,6	;RP1=1, select bank3
   642  00AA  0188               	clrf	8	;volatile
   643  00AB  0008               	return
   644  00AC                     __end_of_system_init:	
   645                           
   646                           	psect	text2
   647  0063                     __ptext2:	
   648 ;; *************** function _UART_vidInit *****************
   649 ;; Defined at:
   650 ;;		line 14 in file "UART_m.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg, pclath, cstack
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMMON   BANK0   BANK1
   664 ;;      Params:         0       0       0
   665 ;;      Locals:         0       0       0
   666 ;;      Temps:          0       1       0
   667 ;;      Totals:         0       1       0
   668 ;;Total ram usage:        1 bytes
   669 ;; Hardware stack levels used:    1
   670 ;; Hardware stack levels required when called:    4
   671 ;; This function calls:
   672 ;;		_UART_u8GetNodeID
   673 ;; This function is called by:
   674 ;;		_main
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           
   679                           ;psect for function _UART_vidInit
   680  0063                     _UART_vidInit:	
   681                           
   682                           ;UART_m.c: 16: BRGH = 0;
   683                           
   684                           ;incstack = 0
   685                           ; Regs used in _UART_vidInit: [wreg+pclath+cstack]
   686  0063  1683               	bsf	3,5	;RP0=1, select bank1
   687  0064  1303               	bcf	3,6	;RP1=0, select bank1
   688  0065  1118               	bcf	24,2	;volatile
   689                           
   690                           ;UART_m.c: 17: SPBRG = (unsigned char)((((unsigned long)20000000 / 9600)/64) - 1);
   691  0066  301F               	movlw	31
   692  0067  0099               	movwf	25	;volatile
   693                           
   694                           ;UART_m.c: 18: SYNC = 0;
   695  0068  1218               	bcf	24,4	;volatile
   696                           
   697                           ;UART_m.c: 19: SPEN = 1;
   698  0069  1283               	bcf	3,5	;RP0=0, select bank0
   699  006A  1303               	bcf	3,6	;RP1=0, select bank0
   700  006B  1798               	bsf	24,7	;volatile
   701                           
   702                           ;UART_m.c: 20: TRISC6 = 1;
   703  006C  1683               	bsf	3,5	;RP0=1, select bank1
   704  006D  1303               	bcf	3,6	;RP1=0, select bank1
   705  006E  1707               	bsf	7,6	;volatile
   706                           
   707                           ;UART_m.c: 21: TRISC7 = 1;
   708  006F  1787               	bsf	7,7	;volatile
   709                           
   710                           ;UART_m.c: 22: TXEN = 1;
   711  0070  1698               	bsf	24,5	;volatile
   712                           
   713                           ;UART_m.c: 23: RCIE = 1;
   714  0071  168C               	bsf	12,5	;volatile
   715                           
   716                           ;UART_m.c: 24: PEIE = 1;
   717  0072  170B               	bsf	11,6	;volatile
   718                           
   719                           ;UART_m.c: 25: GIE = 1;
   720  0073  178B               	bsf	11,7	;volatile
   721                           
   722                           ;UART_m.c: 26: CREN = 1;
   723  0074  1283               	bcf	3,5	;RP0=0, select bank0
   724  0075  1303               	bcf	3,6	;RP1=0, select bank0
   725  0076  1618               	bsf	24,4	;volatile
   726                           
   727                           ;UART_m.c: 28: ECU_ID = UART_u8GetNodeID();
   728  0077  20AC               	fcall	_UART_u8GetNodeID
   729  0078  1283               	bcf	3,5	;RP0=0, select bank0
   730  0079  1303               	bcf	3,6	;RP1=0, select bank0
   731  007A  00A6               	movwf	??_UART_vidInit
   732  007B  0826               	movf	??_UART_vidInit,w
   733  007C  00FA               	movwf	_ECU_ID
   734  007D  0008               	return
   735  007E                     __end_of_UART_vidInit:	
   736                           
   737                           	psect	text3
   738  00AC                     __ptext3:	
   739 ;; *************** function _UART_u8GetNodeID *****************
   740 ;; Defined at:
   741 ;;		line 70 in file "UART_m.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      unsigned char 
   748 ;; Registers used:
   749 ;;		wreg
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMMON   BANK0   BANK1
   755 ;;      Params:         0       0       0
   756 ;;      Locals:         0       0       0
   757 ;;      Temps:          0       0       0
   758 ;;      Totals:         0       0       0
   759 ;;Total ram usage:        0 bytes
   760 ;; Hardware stack levels used:    1
   761 ;; Hardware stack levels required when called:    3
   762 ;; This function calls:
   763 ;;		Nothing
   764 ;; This function is called by:
   765 ;;		_UART_vidInit
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           
   770                           ;psect for function _UART_u8GetNodeID
   771  00AC                     _UART_u8GetNodeID:	
   772                           
   773                           ;UART_m.c: 72: return 0x35;
   774                           
   775                           ;incstack = 0
   776                           ; Regs used in _UART_u8GetNodeID: [wreg]
   777  00AC  3035               	movlw	53
   778  00AD  0008               	return
   779  00AE                     __end_of_UART_u8GetNodeID:	
   780                           
   781                           	psect	text4
   782  007E                     __ptext4:	
   783 ;; *************** function _UART_vidNewDataReceived *****************
   784 ;; Defined at:
   785 ;;		line 31 in file "UART_m.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      void 
   792 ;; Registers used:
   793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMMON   BANK0   BANK1
   799 ;;      Params:         0       0       0
   800 ;;      Locals:         0       0       0
   801 ;;      Temps:          4       0       0
   802 ;;      Totals:         4       0       0
   803 ;;Total ram usage:        4 bytes
   804 ;; Hardware stack levels used:    1
   805 ;; Hardware stack levels required when called:    2
   806 ;; This function calls:
   807 ;;		_RS845_ManageState
   808 ;; This function is called by:
   809 ;;		Interrupt level 1
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           
   814                           ;psect for function _UART_vidNewDataReceived
   815  007E                     _UART_vidNewDataReceived:	
   816                           
   817                           ;UART_m.c: 33: if(RCIF == 1)
   818  007E  1E8C               	btfss	12,5	;volatile
   819  007F  2888               	goto	i1l77
   820                           
   821                           ;UART_m.c: 34: {
   822                           ;UART_m.c: 35: GIE = 0;
   823  0080  138B               	bcf	11,7	;volatile
   824                           
   825                           ;UART_m.c: 36: RS845_ManageState();
   826  0081  2093               	fcall	_RS845_ManageState
   827                           
   828                           ;UART_m.c: 37: GIE = 1;
   829  0082  178B               	bsf	11,7	;volatile
   830                           
   831                           ;UART_m.c: 38: RCIF = 0;
   832  0083  1283               	bcf	3,5	;RP0=0, select bank0
   833  0084  1303               	bcf	3,6	;RP1=0, select bank0
   834  0085  128C               	bcf	12,5	;volatile
   835                           
   836                           ;UART_m.c: 39: RC0 ^= 1;
   837  0086  3001               	movlw	1
   838  0087  0687               	xorwf	7,f
   839  0088                     i1l77:	
   840                           ;UART_m.c: 41: else
   841                           ;UART_m.c: 42: {
   842                           
   843                           ;UART_m.c: 40: }
   844                           
   845  0088  0879               	movf	??_UART_vidNewDataReceived+3,w
   846  0089  00FF               	movwf	127
   847  008A  0878               	movf	??_UART_vidNewDataReceived+2,w
   848  008B  008A               	movwf	10
   849  008C  0877               	movf	??_UART_vidNewDataReceived+1,w
   850  008D  0084               	movwf	4
   851  008E  0E76               	swapf	??_UART_vidNewDataReceived^(0+-128),w
   852  008F  0083               	movwf	3
   853  0090  0EFE               	swapf	126,f
   854  0091  0E7E               	swapf	126,w
   855  0092  0009               	retfie
   856  0093                     __end_of_UART_vidNewDataReceived:	
   857                           
   858                           	psect	intentry
   859  0004                     __pintentry:	
   860                           ;incstack = 0
   861                           ; Regs used in _UART_vidNewDataReceived: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   862                           
   863  0004                     interrupt_function:	
   864  007E                     saved_w	set	btemp
   865  0004  00FE               	movwf	btemp
   866  0005  0E03               	swapf	3,w
   867  0006  00F6               	movwf	??_UART_vidNewDataReceived
   868  0007  0804               	movf	4,w
   869  0008  00F7               	movwf	??_UART_vidNewDataReceived+1
   870  0009  080A               	movf	10,w
   871  000A  00F8               	movwf	??_UART_vidNewDataReceived+2
   872  000B  1283               	bcf	3,5	;RP0=0, select bank0
   873  000C  1303               	bcf	3,6	;RP1=0, select bank0
   874  000D  087F               	movf	btemp+1,w
   875  000E  00F9               	movwf	??_UART_vidNewDataReceived+3
   876  000F  287E               	ljmp	_UART_vidNewDataReceived
   877                           
   878                           	psect	text5
   879  0093                     __ptext5:	
   880 ;; *************** function _RS845_ManageState *****************
   881 ;; Defined at:
   882 ;;		line 47 in file "UART_m.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;		None
   885 ;; Auto vars:     Size  Location     Type
   886 ;;		None
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMMON   BANK0   BANK1
   896 ;;      Params:         0       0       0
   897 ;;      Locals:         0       0       0
   898 ;;      Temps:          0       0       0
   899 ;;      Totals:         0       0       0
   900 ;;Total ram usage:        0 bytes
   901 ;; Hardware stack levels used:    1
   902 ;; Hardware stack levels required when called:    1
   903 ;; This function calls:
   904 ;;		_UART_vidSend
   905 ;; This function is called by:
   906 ;;		_UART_vidNewDataReceived
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           
   911                           ;psect for function _RS845_ManageState
   912  0093                     _RS845_ManageState:	
   913                           
   914                           ;UART_m.c: 49: if(RCREG == (unsigned char)ECU_ID)
   915                           
   916                           ;incstack = 0
   917                           ; Regs used in _RS845_ManageState: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   918  0093  1283               	bcf	3,5	;RP0=0, select bank0
   919  0094  1303               	bcf	3,6	;RP1=0, select bank0
   920  0095  081A               	movf	26,w	;volatile
   921  0096  067A               	xorwf	_ECU_ID,w
   922  0097  1D03               	skipz
   923  0098  0008               	return
   924                           
   925                           ;UART_m.c: 50: {
   926                           ;UART_m.c: 51: UART_vidSend(&Data_Buffer.DATA_BUFFER[0],((unsigned char)6));
   927  0099  3006               	movlw	6
   928  009A  00F0               	movwf	UART_vidSend@Length
   929  009B  3000               	movlw	0
   930  009C  00F1               	movwf	UART_vidSend@Length+1
   931  009D  3020               	movlw	(low (_Data_Buffer| 0))& (0+255)
   932  009E  201A               	fcall	_UART_vidSend
   933                           
   934                           ;UART_m.c: 52: }
   935  009F  0008               	return
   936  00A0                     __end_of_RS845_ManageState:	
   937                           ;UART_m.c: 53: else
   938                           ;UART_m.c: 54: {
   939                           
   940                           
   941                           	psect	text6
   942  001A                     __ptext6:	
   943 ;; *************** function _UART_vidSend *****************
   944 ;; Defined at:
   945 ;;		line 58 in file "UART_m.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  data            1    wreg     const PTR unsigned char 
   948 ;;		 -> Data_Buffer(6), 
   949 ;;  Length          2    0[COMMON] const unsigned short 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  data            1    3[COMMON] const PTR unsigned char 
   952 ;;		 -> Data_Buffer(6), 
   953 ;;  UART_u16Inde    2    4[COMMON] unsigned short 
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1
   963 ;;      Params:         2       0       0
   964 ;;      Locals:         3       0       0
   965 ;;      Temps:          1       0       0
   966 ;;      Totals:         6       0       0
   967 ;;Total ram usage:        6 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_RS845_ManageState
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           
   977                           ;psect for function _UART_vidSend
   978  001A                     _UART_vidSend:	
   979                           
   980                           ;incstack = 0
   981                           ; Regs used in _UART_vidSend: [wreg-fsr0h+status,2+status,0]
   982                           ;UART_vidSend@data stored from wreg
   983  001A  00F3               	movwf	UART_vidSend@data
   984                           
   985                           ;UART_m.c: 60: unsigned short UART_u16Index = 0;
   986  001B  01F4               	clrf	UART_vidSend@UART_u16Index
   987  001C  01F5               	clrf	UART_vidSend@UART_u16Index+1
   988                           
   989                           ;UART_m.c: 62: for(UART_u16Index = 0; UART_u16Index < Length; UART_u16Index++)
   990  001D  01F4               	clrf	UART_vidSend@UART_u16Index
   991  001E  01F5               	clrf	UART_vidSend@UART_u16Index+1
   992  001F  0871               	movf	UART_vidSend@Length+1,w
   993  0020  0275               	subwf	UART_vidSend@UART_u16Index+1,w
   994  0021  1D03               	skipz
   995  0022  2825               	goto	u10_25
   996  0023  0870               	movf	UART_vidSend@Length,w
   997  0024  0274               	subwf	UART_vidSend@UART_u16Index,w
   998  0025                     u10_25:	
   999  0025  1803               	btfsc	3,0
  1000  0026  2841               	goto	i1l86
  1001  0027                     i1l87:	
  1002                           ;UART_m.c: 63: {
  1003                           ;UART_m.c: 64: while(PIR1bits.TXIF == 0);
  1004                           
  1005  0027  1283               	bcf	3,5	;RP0=0, select bank0
  1006  0028  1303               	bcf	3,6	;RP1=0, select bank0
  1007  0029  1E0C               	btfss	12,4	;volatile
  1008  002A  2827               	goto	i1l87
  1009                           
  1010                           ;UART_m.c: 65: TXREG = data[UART_u16Index];
  1011  002B  0874               	movf	UART_vidSend@UART_u16Index,w
  1012  002C  0773               	addwf	UART_vidSend@data,w
  1013  002D  00F2               	movwf	??_UART_vidSend
  1014  002E  0872               	movf	??_UART_vidSend,w
  1015  002F  0084               	movwf	4
  1016  0030  1383               	bcf	3,7	;select IRP bank0
  1017  0031  0800               	movf	0,w
  1018  0032  0099               	movwf	25	;volatile
  1019  0033  3001               	movlw	1
  1020  0034  07F4               	addwf	UART_vidSend@UART_u16Index,f
  1021  0035  1803               	skipnc
  1022  0036  0AF5               	incf	UART_vidSend@UART_u16Index+1,f
  1023  0037  3000               	movlw	0
  1024  0038  07F5               	addwf	UART_vidSend@UART_u16Index+1,f
  1025  0039  0871               	movf	UART_vidSend@Length+1,w
  1026  003A  0275               	subwf	UART_vidSend@UART_u16Index+1,w
  1027  003B  1D03               	skipz
  1028  003C  283F               	goto	u12_25
  1029  003D  0870               	movf	UART_vidSend@Length,w
  1030  003E  0274               	subwf	UART_vidSend@UART_u16Index,w
  1031  003F                     u12_25:	
  1032  003F  1C03               	skipc
  1033  0040  2827               	goto	i1l87
  1034  0041                     i1l86:	
  1035                           
  1036                           ;UART_m.c: 66: }
  1037                           ;UART_m.c: 67: PIR1bits.TXIF = 0;
  1038  0041  1283               	bcf	3,5	;RP0=0, select bank0
  1039  0042  1303               	bcf	3,6	;RP1=0, select bank0
  1040  0043  120C               	bcf	12,4	;volatile
  1041  0044  0008               	return
  1042  0045                     __end_of_UART_vidSend:	
  1043  007E                     btemp	set	126	;btemp
  1044  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      2       8
    BANK1            32      0       0

Pointer List with Targets:

    UART_vidSend@data	const PTR unsigned char  size(1) Largest target is 6
		 -> Data_Buffer(BANK0[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _UART_vidNewDataReceived in COMMON

    _RS845_ManageState->_UART_vidSend

Critical Paths under _main in BANK0

    _main->_UART_vidInit

Critical Paths under _UART_vidNewDataReceived in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART_vidNewDataReceived in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              1 BANK0      1     1      0
                       _UART_vidInit
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_vidInit                                         1     1      0       0
                                              0 BANK0      1     1      0
                   _UART_u8GetNodeID
 ---------------------------------------------------------------------------------
 (2) _UART_u8GetNodeID                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _UART_vidNewDataReceived                              4     4      0     215
                                              6 COMMON     4     4      0
                  _RS845_ManageState
 ---------------------------------------------------------------------------------
 (4) _RS845_ManageState                                    0     0      0     215
                       _UART_vidSend
 ---------------------------------------------------------------------------------
 (5) _UART_vidSend                                         6     4      2     215
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_vidInit
     _UART_u8GetNodeID
   _system_init

 _UART_vidNewDataReceived (ROOT)
   _RS845_ManageState
     _UART_vidSend

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      2       8       4       10.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            20      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               20      0       0       6        0.0%
ABS                  0      0      14       7        0.0%
DATA                 0      0      14       8        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Aug 07 10:39:40 2020

       ??_UART_vidNewDataReceived 0076                       __CFG_CP$OFF 0000               __end_of_system_init 00AC  
                             l819 0047                               _GIE 005F                               _RC0 0038  
                    __CFG_CPD$OFF 0000                               fsr0 0004                               indf 0000  
                    __CFG_FOSC$HS 0000                      __CFG_LVP$OFF 0000                              _BRGH 04C2  
                            _CREN 00C4                              _PEIE 005E                              _RCIE 0465  
                            _RCIF 0065                              i1l77 0088                              i1l86 0041  
                            i1l87 0027                              _SPEN 00C7                              _TXEN 04C5  
                            _SYNC 04C4                      __CFG_WRT$OFF 0000                              _main 0045  
                            btemp 007E                              start 0010                     __CFG_IESO$OFF 0000  
                     _Data_Buffer 0020                             ?_main 0070                     __CFG_WDTE$OFF 0000  
                           _ANSEL 0188                             _RCREG 001A                             u10_25 0025  
                           u12_25 003F                             _SPBRG 0099                             _TRISA 0085  
                           _SSPIF 0063                             _TXREG 0019                    __CFG_FCMEN$OFF 0000  
                  __CFG_BOREN$OFF 0000                             pclath 000A                             status 0003  
                           wtemp0 007E                    __CFG_MCLRE$OFF 0000                   __initialization 0011  
                     _system_init 00A0                      __end_of_main 0063                            ??_main 0027  
                          _ADCON0 001F                            _ECU_ID 007A                            _SSPADD 0093  
                          _TRISC0 0438                            _TRISC3 043B                            _TRISC4 043C  
                          _TRISC6 043E                            _TRISC7 043F                            _SSPCON 0014  
                          _SSPBUF 0013                    __CFG_PWRTE$OFF 0000                            saved_w 007E  
         __end_of__initialization 0018                 ?_UART_u8GetNodeID 0070                    __pcstackCOMMON 0070  
              ??_UART_u8GetNodeID 0026                        __pbssBANK0 0020                        __pnvCOMMON 007A  
                      __pmaintext 0045                        __pintentry 0004                           _ACKSTAT 048E  
                         _SSPCON2 0091                           _SSPSTAT 0094          ?_UART_vidNewDataReceived 0070  
                    ?_system_init 0070                           __ptext1 00A0                           __ptext2 0063  
                         __ptext3 00AC                           __ptext4 007E                           __ptext5 0093  
                         __ptext6 001A                     ?_UART_vidInit 0070                     ?_UART_vidSend 0070  
            end_of_initialization 0018                   _RECEIVED_ECU_ID 007B                    ??_UART_vidInit 0026  
                  ??_UART_vidSend 0072   __end_of_UART_vidNewDataReceived 0093               start_initialization 0011  
       __size_of_UART_u8GetNodeID 0002              __size_of_system_init 000C         UART_vidSend@UART_u16Index 0074  
                     __pbssCOMMON 007B                         ___latbits 0000                     __pcstackBANK0 0026  
            __end_of_UART_vidInit 007E              __end_of_UART_vidSend 0045                 _RS845_ManageState 0093  
              ?_RS845_ManageState 0070               ??_RS845_ManageState 0076  __size_of_UART_vidNewDataReceived 0015  
                UART_vidSend@data 0073         __end_of_RS845_ManageState 00A0                 interrupt_function 0004  
                        _PIR1bits 000C                  _UART_u8GetNodeID 00AC                UART_vidSend@Length 0070  
               __CFG_BOR4V$BOR40V 0000             __size_of_UART_vidInit 001B             __size_of_UART_vidSend 002B  
      __size_of_RS845_ManageState 000D                     __size_of_main 001E           _UART_vidNewDataReceived 007E  
                    _UART_vidInit 0063                      _UART_vidSend 001A                          intlevel1 0000  
                   ??_system_init 0026                       _SSPCON2bits 0091          __end_of_UART_u8GetNodeID 00AE  
